package com.wanli.swing.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.springframework.orm.hibernate3.support.HibernateDaoSupport;

import com.wanli.swing.DbUtils;
import com.wanli.swing.entities.UserBean;

/**
 * 用户模块持久层代码
 * @author wanli
 *
 */
public class RegistDao {

	//注入SessionFactory
	private SessionFactory sessionFactory;
	
	public void setSessionFactory(SessionFactory sessionFactory) {
		this.sessionFactory = sessionFactory;
	}
	
	public Session getSession() {
		return sessionFactory.getCurrentSession();
	}
	
	public void insert(UserBean bean) {
		getSession().save(bean);
	}
	
	/**
	 * 根据用户名查询用户
	 * @param username
	 * @return
	 */
	public UserBean getByUsername(String username) {
		String hql = "from UserBean b where b.name = ?";
		List<UserBean> list = getSession().createQuery(hql).setString(0, username).list();
		if (list != null && list.size() > 0) {
			return list.get(0);
		}
		return null;
	}
	
	/**
	 * 根据昵称查询用户
	 * @param nickname
	 * @return
	 */
	public UserBean getByNickname(String nickname) {
		String hql = "from UserBean b where b.nickname = ?";
		List<UserBean> list = getSession().createQuery(hql).setString(0, nickname).list();
		if (list != null && list.size() > 0) {
			return list.get(0);
		}
		return null;
	}
	
	/**
	 * 根据邮箱查询用户
	 * @param email
	 * @return
	 */
	public UserBean getByEmail(String email) {
		String hql = "from UserBean b where b.email = ?";
		List<UserBean> list = getSession().createQuery(hql).setString(0, email).list();
		if (list != null && list.size() > 0) {
			return list.get(0);
		}
		return null;
	}
	
	/**
	 * 根据userbean对象查询用户
	 * @param bean
	 * @return
	 */
	public UserBean getUserByBean(UserBean bean) {
		
		String hql = "from UserBean b where b.name = ? and b.password = ?";
		@SuppressWarnings("unchecked")
		List<Object> list = getSession().createQuery(hql).setString(0, bean.getName())
					.setString(1, bean.getPassword()).list();
		if (list != null && list.size() > 0) {
			return (UserBean) list.get(0);
		}
		return null;
	}
	
	/**
	 * 根据用户名和密码查询用户
	 * @param name:用户名
	 * @param password:密码
	 * @return
	 */
	public boolean getUserByNameAndPassword(String name, String password) {
		boolean is_get = false;
		PreparedStatement statement = null;
		ResultSet resultSet = null;
		String sql = "select * from userbean where name = ? and password = ?";
		Connection connection = DbUtils.getConnection();
		try {
			statement = connection.prepareStatement(sql);
			statement.setString(1, name);
			statement.setString(2, password);
			resultSet = statement.executeQuery();
			if (resultSet.next()) {
				is_get = true;
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return is_get;
	}
	
	/**
	 * 通过手机号码修改帐号密码
	 * @param parameter:参数可能是电话号码，也可能是邮箱
	 * @param password:新密码
	 */
	public void updatePassword(String parameter, String password) {
		PreparedStatement statement = null;
		String sql = "";
		boolean result = parameter.matches("[0-9]+");
		if (result) {
			sql = "update userbean set password = ? where name = ?";			
		} else {
			sql = "update userbean set password = ? where email = ?";
		}
		Connection connection = DbUtils.getConnection();
		try {
			statement = connection.prepareStatement(sql);
			statement.setString(1, password);
			statement.setString(2, parameter);
			statement.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
}
